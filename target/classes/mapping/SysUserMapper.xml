<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hetaozi.login.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.hetaozi.login.entity.SysUser">
    <!--@mbg.generated-->
    <!--@Table sys_user-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="enabled" jdbcType="BOOLEAN" property="enabled" />
    <result column="account_not_expired" jdbcType="BOOLEAN" property="accountNotExpired" />
    <result column="account_not_locked" jdbcType="BOOLEAN" property="accountNotLocked" />
    <result column="credentials_not_expired" jdbcType="BOOLEAN" property="credentialsNotExpired" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, account, user_name, `password`, last_login_time, enabled, account_not_expired, 
    account_not_locked, credentials_not_expired, create_time, update_time, create_user, 
    update_user
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="account = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.account,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.userName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="last_login_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.lastLoginTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="enabled = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.enabled,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="account_not_expired = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.accountNotExpired,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="account_not_locked = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.accountNotLocked,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="credentials_not_expired = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.credentialsNotExpired,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_user = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createUser,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="update_user = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateUser,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_user
    (account, user_name, `password`, last_login_time, enabled, account_not_expired, account_not_locked, 
      credentials_not_expired, create_time, update_time, create_user, update_user)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.account,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
        #{item.lastLoginTime,jdbcType=TIMESTAMP}, #{item.enabled,jdbcType=BOOLEAN}, #{item.accountNotExpired,jdbcType=BOOLEAN}, 
        #{item.accountNotLocked,jdbcType=BOOLEAN}, #{item.credentialsNotExpired,jdbcType=BOOLEAN}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=INTEGER}, 
        #{item.updateUser,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>